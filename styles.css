:root {
  --green: #A0D6A1;
  --pink: #D08791;
}

*,
*::after,
*::before {
  box-sizing: border-box;
}


body {
  margin: 0;
  font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  counter-reset: score;
}

.container {
  height: 100vh;
  display: grid;
  place-content: center;
}

.title {
  margin: 0.25em 0;
  font-family: 'Dancing Script', cursive;
  text-align: center;
}

.score {
  margin: 0;
  text-align: center;
}

.game {
  --width-game: 400px;
  --height-game: 90vh;
  width: var(--width-game);
  height: var(--height-game);
  position: relative;
  border-radius: 8px;
  border: 5px solid black;
  background-color: #F0CA41;
  overflow: hidden;
  box-shadow: 0 10px 15px rgba(0, 0, 0, 0.25), 0 15px 12px rgba(0, 0, 0, 0.20);
}

.layer {
  position: absolute;
}

.character {
  width: 90px;
  bottom: 0;
  cursor: pointer;
  border-radius: 2em;
}




/* Head */
.character .head {
  --width-head: 90px;
  --height-head: 50px;
  width: var(--width-head);
  height: var(--height-head);
  border-radius: 10em;
  background-color: var(--green);
  padding: 0.45em;
  display: flex;
  align-items: flex-start;
  justify-content: center;
}

/* Ears */
.head::before,
.head::after {
  content: '';
  display: block;
  width: 3.25em;
  height: 1em;
  background: var(--pink);
  border-top: solid .5em var(--green);
  position: absolute;
  top: 0.5em;
  margin: 0 -1em;
  z-index: -1;
  border-radius: 2em 1em;
  animation: ears 2s cubic-bezier(.8,.02,.2,.96) infinite alternate;
}


.head::before {
  --rotate: 20deg;
  transform-origin: center right;
  right: 100%;
  border-bottom-left-radius: 9em 4em;
}
.head::after {
  --rotate: -20deg;
  transform-origin: center left;
  left: 100%;
  border-bottom-right-radius: 9em 4em;
}

@keyframes ears {
  to { transform: rotate(var(--rotate)); }
}

/* Eyes */
.eye {
  width: 1.75em;
  height: 1.75em;
  padding: .25em;
  border-radius: 10em;
  position: relative;
  background-color: black;
  display: flex;
  align-items: flex-start;
  justify-content: flex-end;
  animation: blink 2s cubic-bezier(.8,.02,.2,.96) infinite alternate;
}

@keyframes blink {
  0% {
    transform: scale(1);
  }

  5% {
    transform: scale(1, 0.5) translateY(calc(1.75em / 2));
  }

  10% {
    transform: scale(1);
  }
}


.eye + .eye {
  margin-left: 0.25em;
}

.eye::after {
  content: '';
  width: .75em;
  height: .75em;
  display: inline-block;
  border-radius: inherit;
  background-color: white;
}

/* Walls */
.wall {
  bottom: 0;
  border-radius: 5px;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.20);
  background-color: #B3C7E1;
  background-image: url(./topography.svg);
}

.land {
  width: 100%;
  height: 20px;
  background-color: #667685;
}

.zigzag {
  width: 100%;
  height: 30px;
  background: linear-gradient(135deg, #667685 25%, transparent 25%) -50px 0,
  linear-gradient(-135deg, #667685 25%, transparent 25%) -50px 0,
  linear-gradient(45deg, #B3C7E1 25%, transparent 25%),
  linear-gradient(-45deg, transparent 25%, #16202E 25%);
  background-size: 80px 30px;
}


/* More specific, the layers */
.layer__1, .layer__2 {
  z-index: 1;
  height: 400px;
}

.character {
  animation: jump 2.5s linear infinite alternate;
}

.layer__1 {
  left: 60px;
  animation-delay: 500ms;
}


.layer__2 {
  right: 60px;
}

.layer__3 {
  width: calc(var(--width-game) - 60px);
  height: 350px;
  left: 0;
  right: 0;
  margin: 0 auto;
  z-index: 3;
}


.layer__4 {
  z-index: 4;
  left: 40px;
  height: 300px;
  animation-delay: 1.2s;
}

.layer__5 {
  width: calc(var(--width-game) - 120px);
  height: 250px;
  z-index: 5;
}

.layer__6 {
  z-index: 6;
  right: 40px;
  height: 200px;
  animation-delay: 800ms;
}

.layer__7 {
  width: calc(var(--width-game) - 120px);
  height: 150px;
  z-index: 7;
  right: 0;
}

/* Jump animation */
@keyframes jump {
  0%{
    transform: translateY(0px);
  }
  50% {
    transform: translateY(8.25em);
  }
  70%, 100% {
    transform: translateY(0);
  }

}


/* Score and counter */
.character input[type=checkbox] {
  position: absolute;
  width: 100%;
  height: 80px;
  margin: 0;
  top: 0;
  left: 0;
  cursor: pointer;
  appearance: none;
  z-index: 1;
}

input:checked {
  counter-increment: score;
  opacity: 0;
  visibility: hidden;
}

input:checked  + label {
  opacity: 0;
  visibility: hidden;
}

.score::after {
  content: counter(score);
}
